{"version":3,"sources":["webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAGA;AACA,oCAAqC,oBAAoB,wBAAwB,4BAA4B,uBAAuB,kBAAkB,GAAG,uBAAuB,kBAAkB,GAAG,yBAAyB,iBAAiB,GAAG,0CAA0C,mBAAmB,GAAG,wCAAwC,kBAAkB,GAAG,yBAAyB,kBAAkB,GAAG;;AAE7Z;;;AAGA;AACA,2C;;;;;;;ACXA,2MAA2M,uBAAuB,uQ;;;;;;;;;;;;;;;ACAlO;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;ACN+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oFAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;ACV+C;AACI;AAKvG,sBAAsB;AACtB,IAAM,GAAG,GAAG,4BAA4B,CAAC;AASzC,IAAa,YAAY;IADzB,4BAA4B;IAC5B;IAqBA,CAAC;IAdG,+BAAQ,GAAR;QACE,IAAM,OAAO,GAAG,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,QAAQ,GAAG,IAAI,6EAAY,CAAC,EAAC,GAAG,EAAE,iDAAiD,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QAE/H,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,cAAM,YAAK,CAAC,eAAe,CAAC,EAAtB,CAAsB,CAAC;IAC7D,CAAC;IAED,sCAAe,GAAf,UAAgB,CAAM;QACpB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACtB,CAAC;IAED,kCAAW,GAAX;QACE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACvC,CAAC;IACL,mBAAC;AAAD,CAAC;AAnB2B;IAAvB,+EAAS,CAAC,WAAW,CAAC;kDAAY,yDAAU,oBAAV,yDAAU;+CAAC;AAFrC,YAAY;IAPxB,+EAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,kCAAmC;QACnC,kCAAkC;KAEnC,CAAC;IACF,4BAA4B;GACf,YAAY,CAqBxB;AArBwB;;;;;;;;;;;;;;;;;;;;;;;;AChBiC;AACjB;AACI;AACF;AAEI;AACiB;AAehE,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IAbrB,8EAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;SACb;QACD,OAAO,EAAE;YACP,gFAAa;YACb,mEAAW;YACX,iEAAU;YACV,iEAAgB;SACjB;QACD,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;ACrBtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC","file":"main.bundle.js","sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".drop-box {\\n  cursor: pointer;\\n  background: #F8F8F8;\\n  border: 5px dashed #DDD;\\n  text-align: center;\\n  padding: 40px;\\n}\\n \\n.drag-over-title {\\n  display: none;\\n}\\n \\n.drop-box.dragover {\\n  opacity: 0.6;\\n}\\n \\n.drop-box.dragover .drag-over-title {\\n  display: block;\\n}\\n \\n.drop-box.dragover .drag-in-title {\\n  display: none;\\n}\\n \\ninput[type='file'] {\\n  display: none;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 146\n// module chunks = 1","module.exports = \"<h1>Roufid File upload tutorial</h1>\\n \\n<div>\\n  <input #fileInput type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\"/>\\n \\n  <div class=\\\"drop-box\\\" ng2FileDrop\\n       [ngClass]=\\\"{'dragover': isDropOver}\\\"\\n       [uploader]=\\\"uploader\\\"\\n       (fileOver)=\\\"fileOverAnother($event)\\\"\\n       (click)=\\\"fileClicked()\\\">\\n    <span class=\\\"drag-in-title\\\">Import or drag file here</span>\\n    <span class=\\\"drag-over-title\\\">Drop the file</span>\\n  </div>\\n</div>\\n \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 150\n// module chunks = 1","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 80;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 80\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, Directive, OnInit, NgZone, Input, ViewChild, ElementRef } from '@angular/core';\nimport { FileSelectDirective, FileDropDirective, FileUploader } from 'ng2-file-upload/ng2-file-upload';\nimport { Http } from \"@angular/http\";\nimport { FileUploaderOptions } from \"ng2-file-upload\";\n\nimport { Cloudinary } from '@cloudinary/angular-4.x';\n//const URL = '/api/';\nconst URL = 'http://localhost:8091/api/';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  \n})\n// class FileSelectDirective\nexport class AppComponent implements OnInit{\n\n    @ViewChild('fileInput') fileInput: ElementRef;\n   \n    uploader: FileUploader;\n    isDropOver: boolean;\n   \n    ngOnInit(): void {\n      const headers = [{name: 'Accept', value: 'application/json'}];\n      this.uploader = new FileUploader({url: 'http://localhost:8091/uploadServices/uploadFile', autoUpload: true, headers: headers});\n   \n      this.uploader.onCompleteAll = () => alert('File uploaded');\n    }\n   \n    fileOverAnother(e: any): void {\n      this.isDropOver = e;\n    }\n   \n    fileClicked() {\n      this.fileInput.nativeElement.click();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { FileUploader, FileUploadModule } from 'ng2-file-upload'\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    FileUploadModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts"],"sourceRoot":""}