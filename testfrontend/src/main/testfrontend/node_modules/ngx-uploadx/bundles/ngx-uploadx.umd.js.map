{"version":3,"file":"ngx-uploadx.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-uploadx/interfaces.ts","ng://ngx-uploadx/resolve_url.ts","ng://ngx-uploadx/backoff_retry.ts","ng://ngx-uploadx/uploader.ts","ng://ngx-uploadx/uploadx.service.ts","ng://ngx-uploadx/uploadx.directive.ts","ng://ngx-uploadx/uploadx.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type UploadStatus =\n  | 'added'\n  | 'queue'\n  | 'uploading'\n  | 'complete'\n  | 'error'\n  | 'cancelled'\n  | 'paused'\n  | 'retry';\n\nexport type UploadAction =\n  | 'create'\n  | 'refreshToken'\n  | 'uploadAll'\n  | 'upload'\n  | 'cancel'\n  | 'cancelAll'\n  | 'pauseAll'\n  | 'pause';\n\nexport interface UploadxControlEvent {\n  token?: string | (() => string);\n  action: UploadAction;\n  /**\n   * override global options\n   */\n  itemOptions?: UploadItem;\n  /** Upload unique identifier */\n  uploadId?: string;\n}\n\n/**\n *  Read only upload stream events\n */\nexport type UploadEvent = UploadState;\n\nexport interface UploadState {\n  file: File;\n  name: string;\n  progress: number;\n  percentage: number;\n  remaining: number;\n  response: any;\n  responseStatus: number;\n  size: number;\n  speed: number;\n  status: UploadStatus;\n  uploadId: string;\n  URI: string;\n}\n\nexport interface UploadItem {\n  /**\n   * Upload API initial method\n   * @defaultValue 'POST'\n   */\n  method?: string;\n  readonly uploadId?: string;\n  /**\n   * Upload API URL\n   * @defaultValue '/upload/'\n   */\n  endpoint?: string;\n  /**\n   * Upload API URL\n   * @defaultValue '/upload/'\n   * @deprecated Use {@link UploadItem.endpoint} instead.\n   */\n  url?: string;\n  /**\n   * Custom headers\n   */\n  headers?: { [key: string]: string } | ((file?: File) => { [key: string]: string });\n  /**\n   * Upload meta\n   * @defaultValue\n   * { name: File.Filename, mimeType: File.type }\n   */\n  metadata?: { [key: string]: any } | ((file?: File) => { [key: string]: any });\n  /**\n   * Authorization Bearer token\n   */\n  token?: string | (() => string);\n}\n/**\n * Global Options\n */\nexport class UploadxOptions {\n  /**\n   *  Set \"accept\" attribute\n   * @example\n   * allowedTypes: 'image/*, video/*'\n   */\n  allowedTypes?: string;\n  /**\n   * Auto upload with global options\n   * @defaultValue true\n   */\n  autoUpload?: boolean;\n  /**\n   * If set use chunks for upload\n   * @defaultValue 0\n   */\n  chunkSize?: number;\n  /**\n   * Uploads in parallel\n   * @defaultValue 2\n   */\n  concurrency?: number;\n  /**\n   * Custom headers\n   */\n  headers?: { [key: string]: string } | ((file?: File) => { [key: string]: string });\n  /**\n   * Upload API initial method\n   * @defaultValue 'POST'\n   */\n  method?: string;\n  /**\n   * Upload meta\n   * @defaultValue\n   * { name: File.Filename, mimeType: File.type }\n   */\n  metadata?: { [key: string]: any } | ((file?: File) => { [key: string]: any });\n  /**\n   * Authorization Bearer token\n   */\n  token?: string | (() => string);\n  /**\n   * Upload API URL\n   * @defaultValue '/upload/'\n   */\n  endpoint?: string;\n  /**\n   * Upload API URL\n   * @defaultValue '/upload/'\n   * @deprecated Use {@link UploadxOptions.endpoint} instead.\n   */\n  url?: string;\n  /**\n   * Use withCredentials xhr option?\n   * @defaultValue false\n   */\n  withCredentials?: boolean;\n  /**\n   * Max status 4xx retries\n   * @defaultValue 3\n   */\n  maxRetryAttempts?: number;\n}\n","export function resolveUrl(url: string, baseURI: string) {\n  if (url.indexOf('//') * url.indexOf('https://') * url.indexOf('http://') === 0) {\n    return url;\n  }\n  try {\n    const res = new URL(url, baseURI).href;\n    return res;\n  } catch {\n    if (url.indexOf('/') === 0) {\n      const matches = baseURI.match(/^(?:https?:)?(?:\\/\\/)?([^\\/\\?]+)/g);\n      const origin = matches && matches[0];\n      return origin + url;\n    } else {\n      const matches = baseURI.match(/^(?:https?:)?(?:\\/\\/)?([^\\/\\?]+)?(.*\\/)/g);\n      const path = matches && matches[0];\n      return path + url;\n    }\n  }\n}\n","/**\n *  Exponential Backoff Retries\n */\nexport class BackoffRetry {\n  private delay: number;\n  private code = -1;\n  retryAttempts = 1;\n  /**\n   * @param min  Initial retry delay\n   * @param max  Max retry delay\n   * @param k    Increase factor\n   */\n  constructor(private min = 200, private max = min * 300, private k = 2) {\n    this.delay = this.min;\n  }\n  /**\n   * Delay Retry\n   * @param code\n   * @returns retryAttempts\n   */\n  wait(code?: number): Promise<number> {\n    return new Promise(resolve => {\n      if (code === this.code) {\n        this.retryAttempts++;\n        this.delay = Math.min(this.delay * this.k, this.max);\n      } else {\n        this.delay = this.min;\n        this.retryAttempts = 1;\n      }\n      this.code = code;\n      setTimeout(\n        () => resolve(this.retryAttempts),\n        this.delay + Math.floor(Math.random() * this.min)\n      );\n    });\n  }\n  /**\n   * Reset Retry\n   */\n  reset(): void {\n    this.delay = this.min;\n    this.retryAttempts = 1;\n    this.code = -1;\n  }\n}\n","/**\n * Implements XHR/CORS Resumable Upload\n * @see\n * https://developers.google.com/drive/v3/web/resumable-upload\n */\n\nimport { resolveUrl } from './resolve_url';\nimport { BackoffRetry } from './backoff_retry';\nimport { UploadStatus, UploadItem, UploadState } from './interfaces';\n\n/**\n *\n */\nexport interface UploaderOptions extends UploadItem {\n  maxRetryAttempts: number;\n  chunkSize?: number;\n  withCredentials?: boolean;\n  readonly stateChange?: any;\n}\nconst noop = () => {};\n\nexport class Uploader {\n  headers: { [key: string]: string } | null;\n  metadata: { [key: string]: any };\n  endpoint: string;\n  private _status: UploadStatus;\n  private retry = new BackoffRetry();\n  private startTime: number;\n  progress: number;\n  readonly mimeType: string;\n  readonly name: string;\n  readonly size: number;\n  readonly uploadId: string;\n  remaining: number;\n  response: any;\n  responseStatus: number;\n  speed: number;\n  URI: string;\n  token: string | (() => string);\n  private statusType: number;\n  private _token: string;\n  private _xhr_: XMLHttpRequest;\n  private chunkSize = 1_048_576;\n  private maxRetryAttempts = 3;\n  private stateChange: (evt: UploadState) => void;\n\n  set status(s: UploadStatus) {\n    // Return if State is cancelled or complete (but allow cancel of an complete upload to remove from list and from server)\n    if (this._status === 'cancelled' || (this._status === 'complete' && s !== 'cancelled')) {\n      return;\n    }\n    if (s !== this._status) {\n      if (this._xhr_ && (s === 'cancelled' || s === 'paused')) {\n        this._xhr_.abort();\n      }\n      if (s === 'cancelled' && this.URI) {\n        this.request('delete');\n      }\n      this._status = s;\n      this.notifyState();\n    }\n  }\n\n  get status() {\n    return this._status;\n  }\n\n  /**\n   * Creates an instance of Uploader.\n   */\n  constructor(private readonly file: File, public options: UploaderOptions) {\n    this.uploadId = Math.random()\n      .toString(36)\n      .substring(2, 15);\n    this.name = file.name;\n    this.size = file.size;\n    this.mimeType = file.type || 'application/octet-stream';\n    this.stateChange = options.stateChange || noop;\n    this.configure(options);\n  }\n\n  /**\n   * configure or reconfigure uploader\n   */\n  configure(item = {} as UploadItem): void {\n    const { metadata, headers, token, endpoint } = item;\n    this.metadata = {\n      name: this.name,\n      mimeType: this.mimeType,\n      size: this.file.size,\n      lastModified: this.file.lastModified,\n      ...unfunc(metadata || this.metadata, this.file)\n    };\n    this.endpoint = endpoint || this.options.endpoint;\n    this.chunkSize = this.options.chunkSize || this.chunkSize;\n    this.maxRetryAttempts = this.options.maxRetryAttempts || this.maxRetryAttempts;\n    this.refreshToken(token);\n    this.headers = { ...this.headers, ...unfunc(headers, this.file) };\n  }\n\n  /**\n   * Emit current state\n   */\n  private notifyState(): void {\n    const state: UploadState = {\n      file: this.file,\n      name: this.name,\n      progress: this.progress,\n      percentage: this.progress,\n      remaining: this.remaining,\n      response: this.response,\n      responseStatus: this.responseStatus,\n      size: this.size,\n      speed: this.speed,\n      status: this._status,\n      uploadId: this.uploadId,\n      URI: this.URI\n    };\n    this.stateChange(state);\n  }\n\n  private processResponse(xhr: XMLHttpRequest): void {\n    this.responseStatus = xhr.status;\n    this.response = parseJson(xhr);\n    this.statusType = xhr.status - (xhr.status % 100);\n  }\n\n  refreshToken(token?: any): void {\n    this.token = token || this.token;\n    this._token = unfunc(this.token);\n  }\n\n  private maxAttemptsReached(): boolean | never {\n    if (this.retry.retryAttempts === this.maxRetryAttempts && this.statusType === 400) {\n      this.retry.reset();\n      console.error(\n        `Error: Maximum number of retry attempts reached:\n          file: ${this.name},\n          statusCode: ${this.responseStatus}`\n      );\n      return true;\n    }\n  }\n\n  private create(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (!this.URI || this.responseStatus === 404) {\n        // get file URI\n        const xhr: XMLHttpRequest = new XMLHttpRequest();\n        xhr.open(this.options.method.toUpperCase(), this.endpoint, true);\n        this.setupXHR(xhr);\n        xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n        xhr.setRequestHeader('X-Upload-Content-Length', this.size.toString());\n        xhr.setRequestHeader('X-Upload-Content-Type', this.mimeType);\n        xhr.onload = () => {\n          this.processResponse(xhr);\n          const location = this.statusType === 200 && getKeyFromResponse(xhr, 'location');\n          if (!location) {\n            // limit attempts\n            this.statusType = 400;\n            reject();\n          } else {\n            this.URI = resolveUrl(location, this.endpoint);\n            this.retry.reset();\n            resolve();\n          }\n        };\n        xhr.onerror = () => reject();\n        xhr.send(JSON.stringify(this.metadata));\n      } else {\n        resolve();\n      }\n    });\n  }\n\n  /**\n   * Initiate upload\n   */\n  async upload(item?: UploadItem | undefined): Promise<void> {\n    if (item) this.configure(item);\n    if (this._status === 'cancelled' || this._status === 'complete' || this._status === 'paused') {\n      return;\n    }\n    this.status = 'uploading';\n    this.refreshToken();\n    try {\n      await this.create();\n      this.startTime = new Date().getTime();\n      this.sendChunk(this.progress ? undefined : 0);\n    } catch (e) {\n      if (this.maxAttemptsReached()) {\n        this.status = 'error';\n      } else {\n        this.status = 'retry';\n        await this.retry.wait(this.responseStatus);\n        this.status = 'queue';\n      }\n    }\n  }\n\n  /**\n   * Chunk upload +/ get offset\n   */\n  private sendChunk(offset?: number): void {\n    if (this.status === 'uploading') {\n      let body = null;\n      const xhr: XMLHttpRequest = new XMLHttpRequest();\n      xhr.open('PUT', this.URI, true);\n      this.setupXHR(xhr);\n      this.setupEvents(xhr);\n      if (offset >= 0 && offset < this.size) {\n        const end = this.chunkSize ? Math.min(offset + this.chunkSize, this.size) : this.size;\n        body = this.file.slice(offset, end);\n        xhr.upload.onprogress = this.setupProgressEvent(offset, end);\n        xhr.setRequestHeader('Content-Range', `bytes ${offset}-${end - 1}/${this.size}`);\n        xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n      } else {\n        xhr.setRequestHeader('Content-Range', `bytes */${this.size}`);\n      }\n      xhr.send(body);\n    }\n  }\n\n  private setupEvents(xhr: XMLHttpRequest): void {\n    const onError = async () => {\n      if (this.maxAttemptsReached()) {\n        this.status = 'error';\n        return;\n      }\n      this.status = 'retry';\n      await this.retry.wait(xhr.status);\n      if (xhr.status === 404) {\n        this.status = 'queue';\n        return;\n      }\n      if (xhr.status === 413) {\n        this.chunkSize /= 2;\n      }\n      this.refreshToken();\n      this.status = 'uploading';\n      // request offset\n      this.sendChunk();\n    };\n    const onSuccess = () => {\n      this.processResponse(xhr);\n      const offset = this.statusType === 300 && this.getNextChunkOffset(xhr);\n      if (typeof offset === 'number') {\n        //  next chunk\n        this.retry.reset();\n        this.sendChunk(offset);\n      } else if (this.statusType === 200) {\n        this.progress = 100;\n        this.status = 'complete';\n      } else {\n        onError();\n      }\n    };\n    xhr.onerror = onError;\n    xhr.onload = onSuccess;\n  }\n\n  private setupProgressEvent(offset: number, end: number) {\n    return (pEvent: ProgressEvent) => {\n      const uploaded = pEvent.lengthComputable\n        ? offset + (end - offset) * (pEvent.loaded / pEvent.total)\n        : offset;\n      this.progress = +((uploaded / this.size) * 100).toFixed(2);\n      const now = new Date().getTime();\n      this.speed = Math.round((uploaded / (now - this.startTime)) * 1000);\n      this.remaining = Math.ceil((this.size - uploaded) / this.speed);\n      this.notifyState();\n    };\n  }\n\n  private getNextChunkOffset(xhr: XMLHttpRequest) {\n    const str = getKeyFromResponse(xhr, 'Range');\n    const [match] = str && str.match(/(-1|\\d+)$/g);\n    return match && +match + 1;\n  }\n\n  private setupXHR(xhr: XMLHttpRequest) {\n    //reset response\n    this.responseStatus = null;\n    this.response = null;\n    this.statusType = null;\n\n    this._xhr_ = xhr;\n\n    xhr.responseType = 'json';\n    xhr.withCredentials = this.options.withCredentials;\n    Object.keys(this.headers).forEach(key => xhr.setRequestHeader(key, this.headers[key]));\n    // tslint:disable-next-line: no-unused-expression\n    this._token && xhr.setRequestHeader('Authorization', `Bearer ${this._token}`);\n  }\n\n  request(method: string, payload = null) {\n    return new Promise((resolve, reject) => {\n      const xhr: XMLHttpRequest = new XMLHttpRequest();\n      xhr.open(method.toUpperCase(), this.URI, true);\n      this.setupXHR(xhr);\n      xhr.onload = () => {\n        this.processResponse(xhr);\n        resolve();\n      };\n      xhr.onerror = () => reject();\n      const body = payload ? JSON.stringify(payload) : null;\n      xhr.send(body);\n    });\n  }\n}\n\nfunction getKeyFromResponse(xhr: XMLHttpRequest, key: string) {\n  const fromHeader = xhr.getResponseHeader(key);\n  if (fromHeader) {\n    return fromHeader;\n  }\n  const response = parseJson(xhr) || {};\n  const resKey = Object.keys(response).find(k => k.toLowerCase() === key.toLowerCase());\n  return response[resKey];\n}\n\nfunction parseJson(xhr: XMLHttpRequest) {\n  return typeof xhr.response === 'object' ? xhr.response : JSON.parse(xhr.responseText || null);\n}\n\nfunction unfunc<T>(value: T | ((file: File) => T), file?: File): T {\n  return value instanceof Function ? value(file) : value;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport {\n  UploadState,\n  UploadStatus,\n  UploadxControlEvent,\n  UploadxOptions,\n  UploadEvent\n} from './interfaces';\nimport { Uploader, UploaderOptions } from './uploader';\nimport { map, startWith } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class UploadxService {\n  private readonly eventsStream: Subject<UploadState> = new Subject();\n  get events() {\n    return this.eventsStream.asObservable();\n  }\n  queue: Uploader[] = [];\n  private concurrency = 2;\n  private autoUpload = true;\n  private options: UploadxOptions;\n  stateChange = (evt: UploadState) => {\n    setTimeout(() => {\n      this.eventsStream.next(evt);\n    });\n  };\n\n  get uploaderOptions(): UploaderOptions {\n    return {\n      method: this.options.method || 'POST',\n      // tslint:disable-next-line: deprecation\n      endpoint: this.options.endpoint || this.options.url || '/upload',\n      headers: this.options.headers,\n      metadata: this.options.metadata,\n      token: this.options.token,\n      chunkSize: this.options.chunkSize,\n      withCredentials: this.options.withCredentials,\n      maxRetryAttempts: this.options.maxRetryAttempts,\n      stateChange: this.stateChange\n    };\n  }\n\n  constructor() {\n    this.events.subscribe((evt: UploadEvent) => {\n      if (evt.status !== 'uploading' && evt.status !== 'added') {\n        this.processQueue();\n      }\n    });\n  }\n  /**\n   * Initializes service\n   * @param options global options\n   * @returns Observable that emits a new value on progress or status changes\n   */\n  init(options: UploadxOptions): Observable<UploadState> {\n    this.options = options;\n    this.concurrency = options.concurrency || this.concurrency;\n    this.autoUpload = !(options.autoUpload === false);\n    return this.events;\n  }\n  /**\n   * Initializes service\n   * @param options global options\n   * @returns Observable that emits the current queue\n   */\n  connect(options?: UploadxOptions): Observable<Uploader[]> {\n    return this.init(options || this.options).pipe(\n      startWith(0),\n      map(() => this.queue)\n    );\n  }\n\n  /**\n   * Terminate all uploads and clears the queue\n   */\n  disconnect() {\n    this.queue.forEach(f => (f.status = 'paused'));\n    this.queue = [];\n  }\n  /**\n   * Create Uploader and add to the queue\n   */\n  handleFileList(fileList: FileList) {\n    for (let i = 0; i < fileList.length; i++) {\n      const uploader: Uploader = new Uploader(fileList.item(i), this.uploaderOptions);\n      this.queue.push(uploader);\n      uploader.status = 'added';\n    }\n    this.autoUploadFiles();\n  }\n  /**\n   * Create Uploader for the file and add to the queue\n   */\n  handleFile(file: File): void {\n    const uploader: Uploader = new Uploader(file, this.uploaderOptions);\n    this.queue.push(uploader);\n    uploader.status = 'added';\n    this.autoUploadFiles();\n  }\n  /**\n   * Auto upload the files if the flag is true\n   * @internal\n   */\n  private autoUploadFiles(): void {\n    if (this.autoUpload) {\n      this.queue.filter(f => f.status === 'added').forEach(f => (f.status = 'queue'));\n    }\n  }\n  /**\n   * Control uploads status\n   * @example\n   * this.uploadService.control({ action: 'pauseAll' });\n   *\n   */\n  control(event: UploadxControlEvent): void {\n    switch (event.action) {\n      case 'cancelAll':\n        this.queue.forEach(f => (f.status = 'cancelled'));\n        break;\n      case 'pauseAll':\n        this.queue.forEach(f => (f.status = 'paused'));\n        break;\n      case 'refreshToken':\n        this.queue.forEach(f => f.refreshToken(event.token));\n        break;\n      case 'uploadAll':\n        this.queue.filter(f => f.status !== 'uploading').forEach(f => (f.status = 'queue'));\n        break;\n      case 'upload':\n        const uploadId = event.uploadId || event.itemOptions.uploadId;\n        const upload = this.queue.find(f => f.uploadId === uploadId);\n        upload.configure(event.itemOptions);\n        upload.status = 'queue' as UploadStatus;\n        break;\n      case 'cancel':\n        this.queue.find(f => f.uploadId === event.uploadId).status = 'cancelled';\n        break;\n      case 'pause':\n        this.queue.find(f => f.uploadId === event.uploadId).status = 'paused';\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Queue management\n   * @internal\n   */\n  private processQueue() {\n    // Remove Cancelled Items from local queue\n    this.queue = this.queue.filter(f => f.status !== 'cancelled');\n\n    const running = this.runningProcess();\n\n    this.queue\n      .filter((uploader: Uploader) => uploader.status === 'queue')\n      .slice(0, Math.max(this.concurrency - running, 0))\n      .forEach((uploader: Uploader) => {\n        uploader.upload();\n      });\n  }\n  /**\n   * @returns  number of active uploads\n   */\n  runningProcess(): number {\n    return this.queue.filter(\n      (uploader: Uploader) => uploader.status === 'uploading' || uploader.status === 'retry'\n    ).length;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Renderer2,\n  OnInit,\n  OnDestroy,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { UploadxOptions, UploadState, UploadxControlEvent } from './interfaces';\nimport { UploadxService } from './uploadx.service';\n\n@Directive({\n  selector: '[uploadx]'\n})\nexport class UploadxDirective implements OnInit, OnDestroy {\n  listenerFn: () => void;\n  @Output()\n  uploadxState = new EventEmitter();\n  @Input()\n  uploadx: UploadxOptions;\n  @Input()\n  set uploadxAction(ctrlEvent: UploadxControlEvent) {\n    if (ctrlEvent && this.uploadService) {\n      this.uploadService.control(ctrlEvent);\n    }\n  }\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private uploadService: UploadxService\n  ) {}\n\n  ngOnInit() {\n    if (this.uploadx) {\n      if (this.uploadx.allowedTypes) {\n        this.renderer.setAttribute(\n          this.elementRef.nativeElement,\n          'accept',\n          this.uploadx.allowedTypes\n        );\n      }\n      this.uploadService.init(this.uploadx);\n    }\n    this.uploadxState.emit(<Observable<UploadState>>this.uploadService.events);\n    this.listenerFn = this.renderer.listen(\n      this.elementRef.nativeElement,\n      'change',\n      this.fileListener\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.listenerFn) {\n      this.listenerFn();\n    }\n  }\n\n  fileListener = () => {\n    if (this.elementRef.nativeElement.files) {\n      this.uploadService.handleFileList(this.elementRef.nativeElement.files);\n    }\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UploadxDirective } from './uploadx.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [UploadxDirective],\n  exports: [UploadxDirective]\n})\nexport class UploadxModule {}\n"],"names":["Subject","startWith","map","Injectable","EventEmitter","tslib_1.__decorate","Output","Input","Directive","ElementRef","Renderer2","NgModule","CommonModule"],"mappings":"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"}